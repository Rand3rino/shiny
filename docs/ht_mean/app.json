[{"name":"app.R","content":"source('tstat.R')\r\nsource('pval.R')\r\nsource('combined.R')\r\nlibrary(shiny); library(graphics)\r\nui <- tagList(\r\n  includeCSS('styles.css'),\r\n  withMathJax(),\r\n  navbarPage(title='Test for population mean', inverse=T,\r\n             tabPanel('Introduction', \r\n                  wellPanel(   \r\n                  h3(strong('Introduction to hypothesis test for a population mean \\\\(\\\\mu\\\\)')), \r\n                  'Click on the tabs on the black bar at the top of the page to navigate to\r\n                  the different apps. The tabs are:',\r\n                  tags$ul(\r\n                    tags$li('Introduction (currently selected)'),\r\n                    tags$li('Test statistic'),\r\n                    tags$li('P-value'),\r\n                    tags$li('Test statistic / p-value')\r\n                  )\r\n              )),\r\n                 tabPanel('Test statistic', tstat.ui()),\r\n                 tabPanel('P-value', pval.ui()), \r\n                 tabPanel('Test statistic / p-value', combined.ui())\r\n))\r\n\r\nserver <- function(input, output){\r\n  tstat.serv(input, output)\r\n  pval.serv(input, output)  \r\n  combined.serv(input, output)\r\n}\r\n\r\nshinyApp(ui = ui, server = server)","type":"text"},{"name":"combined.R","content":"combined.ui <- function(){fluidPage(\r\n  wellPanel(\r\n    h3(strong('Combined test statistic and p-value')), \r\n    tags$div(checkboxInput('show_info_comb', label='Click for more info!'), \r\n             style='margin-bottom: -10px;'), \r\n    conditionalPanel('input.show_info_comb == true', \r\n                     uiOutput('info_comb')\r\n    , style='margin-bottom: -10px;')\r\n  ),\r\n  fluidRow(\r\n    column(3, wellPanel(\r\n      h4(strong('Inputs')),\r\n      sliderInput('xbarc', label='Sample mean \\\\(\\\\bar{x}\\\\)', \r\n                  min=1, max=99, value=47, step=.1), \r\n      sliderInput('mu0c', label='Population mean under \\\\(H_0\\\\) \\\\((\\\\mu_0)\\\\)', \r\n                  min=1, max=99, value=46, step=.1),\r\n      sliderInput('sc', label='Sample standard deviation \\\\(s\\\\)', \r\n                  min=1, max=50, value=9, step=.1),\r\n      sliderInput('nc', label='Sample size \\\\(n\\\\)', min=2, max=200, \r\n                  value=20, step=1)\r\n    )),\r\n    column(3, wellPanel(\r\n      h4(strong('Test statistic')), \r\n      '$$t = \\\\frac{\\\\bar{x} - \\\\mu_0}{s/\\\\sqrt{n}}$$',\r\n      hr(),\r\n      strong('Result'),\r\n      uiOutput('num_den'), \r\n      hr(),\r\n      strong('Plot'),\r\n      plotOutput('tstatc', height=\"110px\")\r\n    )), \r\n    column(6, wellPanel(\r\n      h4(strong('P-value')), \r\n      radioButtons('Hac', \r\n                       label='Alternative Hypothesis \\\\(H_a\\\\)', \r\n                       choiceValues=list('gr', 'le', 'ne'),\r\n                       choiceNames=list('\\\\(H_a: \\\\mu > \\\\mu_0\\\\)', \r\n                                        '\\\\(H_a: \\\\mu < \\\\mu_0\\\\)', \r\n                                        '\\\\(H_a: \\\\mu \\\\ne \\\\mu_0\\\\)')\r\n      ), \r\n      hr(),\r\n      plotOutput('pval.picc', height='350px')\r\n      \r\n    ))\r\n  )\r\n)}\r\n\r\ncombined.serv <- function(input, output){\r\n  output$info_comb <- renderUI({\r\n    fluidRow(\r\n      column(3, wellPanel(\r\n        tags$div('Use the sliders to change the inputs to the test statistic formula', \r\n                 style='font-size: x-small')\r\n      )),\r\n      column(3, wellPanel(\r\n        tags$div('Observe how the test statistic is affected by the changing inputs.', \r\n                 style='font-size: x-small')\r\n      )),\r\n      column(6, wellPanel(\r\n        tags$div('Displays the p-value corresponding to the current value of the test statistic\r\n                 and the alternative hypothesis chosen.', \r\n                 style='font-size: x-small')\r\n      ))\r\n      , style=\"margin: 0px -20px;\") \r\n  })\r\n  output$tstatc <- renderPlot({\r\n    t <- (input$xbarc - input$mu0c) / (input$sc / sqrt(input$nc))\r\n    par(cex.main=1.5, cex.axis=1, mar=c(2.1, .1, 2.1, .1))\r\n    plot(NA, NA, xlim=c(-5, 5), ylim=c(-.05, .05), xaxt='n', yaxt='n', xlab='', \r\n         ylab='')\r\n    abline(v=-10:10/2, lty=3, col=grey(.5))\r\n    axis(side=1, at=-5:5)\r\n    title(paste('t =', round(t,2)))\r\n    if(t > 0) arrows(0,0,x1=t, col=4, lwd=3, length=.07)\r\n    if(t < 0) arrows(0,0,x1=t, col=3, lwd=3, length=.07)\r\n    if(t>5.4) text(4.2, .03, 'Off-screen', col=2)\r\n    if(t< -5.4) text(-4.2, .03, 'Off-screen', col=2)\r\n  })\r\n  output$num_den <- renderUI({\r\n    num <- input$xbarc - input$mu0c\r\n    den <- input$sc / sqrt(input$nc)\r\n    t <- round(num / den, 2)\r\n    den <- round(den, 3)\r\n    fluidPage(\r\n      withMathJax(paste0('$$t = \\\\frac{', round(num, 1), '}{', den, '} = ', t, '$$'))\r\n    )\r\n  })\r\n  output$pval.picc <- renderPlot({\r\n    t <- (input$xbarc - input$mu0c) / (input$sc / sqrt(input$nc))\r\n    if(input$Hac == 'le') pval <- pt(t, df=input$nc -1)\r\n    if(input$Hac == 'gr') pval <- 1-pt(t, df=input$nc-1)\r\n    if(input$Hac == 'ne') pval <- 2*pt(-abs(t), df=input$nc-1)\r\n    t <- round(t, 2); z <- t\r\n    pval <- ifelse(pval < .0001, '<.0001', \r\n                   ifelse(pval>.9999, '>.9999', sprintf(\"%.4f\", pval)))\r\n    x <- seq(-3.6, 3.6, by=.01)\r\n    par(cex.main=1.5, cex.lab=1.4, cex.axis=1.2, mar=c(4.1, .1, 2.1, .1))\r\n    plot(x, dt(x, input$nc-1), type='l', main=paste0('p-value = ',pval), \r\n         yaxt='n', ylab='', xaxt='n', xlab='Test statistic (t)')\r\n    if(input$Hac == 'gr'){\r\n      if(z < -3.6){\r\n          axis(side=1, at=-3, label=paste('<-', z), tick=F)\r\n          z.seq <- seq(-3.6, 3.6, by=.01)\r\n          polygon(c(z.seq, 3.6, -3.6), c(dt(z.seq, input$nc-1), 0,0), col=grey(.6))\r\n        }\r\n      else if(z < 3.6){\r\n          axis(side=1, at=z)\r\n          z.seq <- seq(z, 3.6, by=.01)\r\n          polygon(c(z.seq, 3.6, z), c(dt(z.seq, input$nc-1), 0,0), col=grey(.6))\r\n        }\r\n      else{axis(side=1, at=3, label=paste(z, ' ->'), tick=F)}\r\n    }\r\n    if(input$Hac == 'le'){\r\n        if(z < -3.6){\r\n          axis(side=1, at=-3, label=paste('<-', z), tick=F)\r\n        }\r\n        else if(z < 3.6){\r\n          axis(side=1, at=z)\r\n          z.seq <- seq(z, -3.6, by=-.01)\r\n          polygon(c(z.seq, -3.6, z), c(dt(z.seq, input$nc-1), 0, 0), col=grey(.6))\r\n        }\r\n        else{\r\n          axis(side=1, at=3, label=paste(z, ' ->'), tick=F)\r\n          z.seq <- seq(3.6, -3.6, by=-.01)\r\n          polygon(c(z.seq, -3.6, z), c(dt(z.seq, input$nc-1), 0, 0), col=grey(.6))\r\n        }\r\n    }\r\n    if(input$Hac == 'ne'){\r\n        if(abs(z) < 3.6){\r\n          axis(side=1, at=c(-z,z), labels=c(ifelse(abs(z)<.3, NA, -z), z))\r\n          z.seq <- seq(-abs(z), -3.6, by=-.01)\r\n          polygon(c(z.seq, -3.6, -abs(z)), c(dt(z.seq, input$nc-1), 0, 0), col=grey(.6))\r\n          z.seq <- seq(abs(z), 3.6, by=.01)\r\n          polygon(c(z.seq, 3.6, abs(z)), c(dt(z.seq, input$nc-1), 0,0), col=grey(.6))\r\n        }\r\n        else{\r\n          axis(side=1, at=c(-3, 3), labels=c(paste('<-',-abs(z)), paste(abs(z),'->')))\r\n        }\r\n    }\r\n  })\r\n}","type":"text"},{"name":"pval.R","content":"pval.ui <- function(){\r\n  fluidPage(\r\n  wellPanel(\r\n    h3(strong('P-value')),\r\n    tags$div(checkboxInput('info_pval', label='Click for more info!'), \r\n             style='margin-bottom: -10px'), \r\n    conditionalPanel('input.info_pval == true', \r\n                     fluidRow(\r\n                       column(4, wellPanel(\r\n                         tags$div('Use the slider to change the value of the test statistic \\\\(t\\\\), \r\n                                  and use the buttons to change the alternative hypothesis \\\\(H_a\\\\) \r\n                                  that is tested.', \r\n                                  style='font-size: x-small;')\r\n                       )),\r\n                       column(8, wellPanel(\r\n                         tags$div('Note how the p-value changes (both its value and the corresponding \r\n                                area under the curve) when you change the test statistic\r\n                                  and the alternative hypothesis.', br(), \r\n                                  'More background:',\r\n                                  tags$ul(\r\n                                  tags$li('The definition of the p-value is the probability of obtaining the observed \r\n                                  test statistic or one more extreme in the direction of \\\\(H_a\\\\) \r\n                                  assuming that \\\\(H_0\\\\) is true.'), \r\n                                  tags$li('Because we are assuming \\\\(H_0\\\\) is true, the test statistic \\\\(t\\\\)\r\n                                  follows the \\\\(t\\\\) distribution with \\\\(n-1\\\\) degrees of freedom.  This is the bell-shaped \r\n                                  curve shown and the p-value is the shaded area under this curve.'),\r\n                                  tags$li('The \\\"observed test statistic or more extreme in the direction of \\\\(H_a\\\\)\\\"\r\n                                  part of the definition is the reason the shaded area starts at the test \r\n                                  statistic value \\\\(t\\\\) and is the region'),\r\n                                  tags$ul(\r\n                                    tags$li('greater than \\\\(t\\\\) for \\\\(H_a:\\\\mu>\\\\mu_0\\\\)'), \r\n                                    tags$li('less than \\\\(t\\\\) for \\\\(H_a:\\\\mu<\\\\mu_0\\\\)'),\r\n                                    tags$li('farther from 0 than \\\\(t\\\\) for \\\\(H_a:\\\\mu\\\\ne \\\\mu_0\\\\)')\r\n                                  )),\r\n                                  style='font-size: x-small; margin-bottom:-10px;')\r\n                       ))\r\n                       , style=\"margin: 0px -20px;\") \r\n                     , style='margin-bottom: -10px;')\r\n  ),\r\n  fluidRow(\r\n    column(4, wellPanel(\r\n      sliderInput('t', label='Test statistic \\\\((t)\\\\)', min=-5, max=5, \r\n                  value=.9, step=.01), \r\n      sliderInput('df', label='Degrees of freedom (df)', min=1, max=100, value=1),\r\n      hr(),\r\n      radioButtons('Ha', \r\n                   label='Alternative Hypothesis \\\\((H_a)\\\\)', \r\n                   choiceValues=list('gr', 'le', 'ne'),\r\n                   choiceNames=list(HTML('\\\\(H_a: \\\\mu > \\\\mu_0\\\\)'), \r\n                                    HTML('\\\\(H_a: \\\\mu < \\\\mu_0\\\\)'), \r\n                                    HTML('\\\\(H_a: \\\\mu \\\\ne \\\\mu_0\\\\)'))\r\n                   )\r\n    )),\r\n    column(8, wellPanel(\r\n      plotOutput('pval.pic', height='350px')\r\n    ))\r\n  )\r\n)}\r\n\r\npval.serv <- function(input, output){\r\n  output$pval.pic <- renderPlot({\r\n    if(input$Ha == 'le') pval <- pt(input$t, df=input$df)\r\n    if(input$Ha == 'gr') pval <- 1-pt(input$t, df=input$df)\r\n    if(input$Ha == 'ne') pval <- 2*pt(-abs(input$t), df=input$df)\r\n    pval <- ifelse(pval < .0001, '<.0001', \r\n\t\t  ifelse(pval>.9999, '>.9999', sprintf(\"%.4f\", pval)))\r\n    x <- seq(-5.1, 5.1, by=.01)\r\n    par(cex.main=1.5, cex.lab=1.2, cex.axis=1, mar=c(4.1, .1, 2.1, .1))\r\n    plot(x, dt(x, input$df), type='l', main=paste0('p-value = ',pval), \r\n         yaxt='n', ylab='', xaxt='n', xlab='Test statistic (t)')\r\n    axis(side=1, at=input$t)\r\n    if(input$Ha == 'ne') \r\n      if(abs(input$t) >=.3) axis(side=1, at=-input$t)\r\n    #segments(x0=input$z, y0=0, y1=dnorm(input$z))\r\n    if(input$Ha == 'gr'){\r\n      z.seq <- seq(input$t, 5.1, by=.01)\r\n      polygon(c(z.seq, 5.1, input$t), c(dt(z.seq, input$df), 0,0), col=grey(.6))\r\n    }\r\n    if(input$Ha == 'le'){\r\n      z.seq <- seq(input$t, -5.1, by=-.01)\r\n      polygon(c(z.seq, -5.1, input$t), c(dt(z.seq, input$df), 0, 0), col=grey(.6))\r\n    }\r\n    if(input$Ha == 'ne'){\r\n      z.seq <- seq(-abs(input$t), -5.1, by=-.01)\r\n      polygon(c(z.seq, -5.1, -abs(input$t)), c(dt(z.seq, input$df), 0, 0), col=grey(.6))\r\n      z.seq <- seq(abs(input$t), 5.1, by=.01)\r\n      polygon(c(z.seq, 5.1, abs(input$t)), c(dt(z.seq, input$df), 0,0), col=grey(.6))\r\n    }\r\n  })\r\n}","type":"text"},{"name":"styles.css","content":"hr{\r\n    border-style: solid;\r\n    border-color: black;\r\n}\r\nul, ol{\r\n    padding-left: 15px;\r\n}\r\nh3, h4{\r\n\tmargin-top: 0px;\r\n\tmargin-bottom: 5px;\r\n}\r\ntable, th, td {\r\n    border: 1px solid black;\r\n}\r\nth, td{\r\n\tpadding: 3px;\r\n}\r\nth{\r\n\tfont-style: bold;\r\n}\r\n.well{\r\n\tmargin: 5px 5px 5px 5px;\r\n\tpadding: 15px;\r\n}\r\n.row{\r\n\tpadding: 0px;\r\n\tmargin: 0px;\r\n}\r\n.col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9{\r\n\tpadding: 0px;\r\n\tmargin: 0px;\r\n}\r\n.container-fluid{\r\n\tpadding: 0px 0px 0px 0px; /* top right bottom left */\r\n\tmargin:0px;\r\n}\r\n.navbar-header{\r\n\tmargin: 0px;\r\n}\r\n.tab-pane{\r\n\tpadding: 0px;\r\n\tmargin: 0px;\r\n}\r\n.tab-content{\r\n\tpadding: 0px;\r\n\tmargin: 0px;\r\n}\r\ndiv.checkbox{\r\n\tmargin: 0px;\r\n}\r\nnav.navbar{\r\n\tpadding-left: 15px;\r\n\tmargin-bottom: 0px;\r\n}","type":"text"},{"name":"tstat.R","content":"tstat.ui <- function(){\r\n  fluidPage(\r\n  wellPanel(\r\n    h3(strong('Test statistic:'), \r\n       '\\\\(t = \\\\frac{\\\\bar{x}-\\\\mu_0}{s/\\\\sqrt{n}}\\\\)'), \r\n    tags$div(checkboxInput('info_tstat', label='Click for more info!'), \r\n             style='margin-bottom: -10px'), \r\n    conditionalPanel('input.info_tstat == true', \r\n                     fluidRow(\r\n                       column(4, wellPanel(\r\n                         tags$div('Use the sliders to change the variables in the formula for \r\n                                  the test statistic. (Helpful hint: Using the arrow keys after \r\n                                  clicking on a slider allows for finer control.)', \r\n                                  style='font-size: x-small;')\r\n                       )),\r\n                       column(3, wellPanel(\r\n                         tags$div('Observe what happens to the numerator and denominator of the test \r\n                                  statistic formula when you change \\\\(\\\\bar{x}, \\\\mu_0, s\\\\), \r\n                                  and \\\\(n\\\\) using the sliders.',\r\n                                  style='font-size: x-small;')\r\n                       )),\r\n                       column(5, wellPanel(\r\n                         tags$div('The definition of a test statistic is a number that summarizes the \r\n                                  difference between the observed sample and what we would expect to \r\n                                  observe if \\\\(Ho\\\\) is true. Certainly this difference is measured \r\n                                  by the numerator \\\\(\\\\bar{x}-\\\\mu_0\\\\), and dividing by the \r\n                                  denominator tells us whether this is a large or small difference. \r\n                                  This is because the test statistic \\\\(t\\\\) reports how many \r\n                                  standard errors \\\\(\\\\bar{x}\\\\) is above or below \\\\(\\\\mu_0\\\\) \r\n                                  (where the standard error is the estimated standard deviation of the \r\n                                  sampling distribution of \\\\(\\\\bar{x}\\\\)).', \r\n                                  style='font-size: x-small;')\r\n                       ))\r\n                       , style=\"margin: 0px -20px;\") \r\n    , style='margin-bottom: -10px;')\r\n  ),\r\n  fluidRow(column(4, wellPanel(\r\n    sliderInput('xbar', label='Sample mean \\\\(\\\\bar{x}\\\\)', \r\n                min=1, max=99, value=47, step=.1), \r\n    sliderInput('mu0', label='Population mean under \\\\(H_0\\\\) \\\\((\\\\mu_0)\\\\)', \r\n                min=1, max=99, value=46, step=.1),\r\n    sliderInput('s', label='Sample standard deviation \\\\(s\\\\)', \r\n                min=1, max=50, value=10, step=.1),\r\n    sliderInput('n', label='Sample size \\\\(n\\\\)', min=2, max=200, \r\n                value=20, step=1)\r\n  )), \r\n  column(3, wellPanel(\r\n    h4(strong('Result')),\r\n    uiOutput('tres')\r\n  )),\r\n  column(5, wellPanel(\r\n    h4(strong('Graph of test statistic')),\r\n    plotOutput('tstat', height=\"100px\")\r\n  ))\r\n    \r\n  )\r\n)}\r\n\r\ntstat.serv <- function(input, output){\r\n  output$tres <- renderUI({\r\n    num <- input$xbar - input$mu0\r\n    den <- input$s / sqrt(input$n)\r\n    t <- num / den\r\n    fluidPage(\r\n      withMathJax(\r\n        paste0('$$ t = \\\\frac{', round(num, 1), '}{', round(den, 3), '} = ', round(t, 2), '$$')\r\n      )\r\n    )\r\n  })\r\n  output$tstat <- renderPlot({\r\n    t <- (input$xbar - input$mu0) / (input$s / sqrt(input$n))\r\n    par(cex.main=1.4, cex.axis=1, mar=c(2.1, .1, 2.1, .1))\r\n    plot(NA, NA, xlim=c(-5, 5), ylim=c(-.05, .05), xaxt='n', yaxt='n', xlab='', \r\n         ylab='')\r\n    abline(v=-10:10/2, lty=3, col=grey(.5))\r\n    axis(side=1, at=-5:5)\r\n      title(paste('t =', round(t,2)))\r\n      if(t > 0) arrows(0,0,x1=t, col=4, lwd=3, length=.09)\r\n      if(t < 0) arrows(0,0,x1=t, col=3, lwd=3, length=.09)\r\n      if(t>5.4) text(4.8, .02, 'Off-screen', col=2)\r\n      if(t< -5.4) text(-4.8, .02, 'Off-screen', col=2)\r\n    \r\n  })\r\n  output$znum <- renderText({input$xbar - input$mu0})\r\n  output$zden <- renderText({\r\n    sprintf('%.3f', input$s / sqrt(input$n))\r\n  })\r\n}","type":"text"}]
